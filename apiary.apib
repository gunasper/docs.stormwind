FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Stormwind LinCare API

Allows third-part clients to connect and get rich information from LinCare's databases and mining process.




## Data Structures

### User
- user_id: `e7ce178e-be87-449a-80fa-96182d8d4dec` (string, required) - teste

### Reminder 
- repeating (array, required) - array containing the days the alarm should ring (true) or not (false). It uses the convention where each position represents a day (Sunday, Monday, ..., Saturday)
    - True
    - True
    - False
    - False
    - False
    - True
    - True
+ message: Play soccer (required) - some message about the reminder
+ time: 12:00:00 (required) - when the reminder should ring
- active (enum)
    - True
    - False

### ReminderOBJ
- Include User
- reminder_id: `7912ab08-a014-4bbc-a327-ba0c96158771`
- Include Reminder 

### ReminderGET
- reminders (array[ReminderOBJ]) - array containing the user's reminders


### Contact
- name: `Carla Souza` (string, required) - the contact's name
- email: `carlinha@grandma.com` (string, optional) - the contact's email 
- phone: `+55 31 2344-4234` (string, required) - the contact's phone
- relationship: 4 (number, required) - the contact's relationship level 

### ContactOBJ
- Include User
- contact_id: `0abc12e8-a014-4bbc-a327-ba0c96158771`
- Include Contact 

### ContactGET
- contacts (array[ContactOBJ]) - array containing the user's contacts



# Group History

Collect information about the historic of a user.

## Alerts Collection [/v0/history/alerts/{user_id}{?limit}]

+ Parameters
    + user_id (UUID) - Identifier of the User in the form of a UUID
    + limit (optional, Number) - How many Alerts to return. Max is 1000. Default is 1000.

## List all Alerts of a User [GET]

+ Response 200 (application/json)

        {
            "alerts": [
                {"action": "fall", "user_id": "2", "pushed_at": 1473388947}, 
                {"action": "help", "user_id": "2", "pushed_at": 1473388943}, 
                {"action": "help", "user_id": "2", "pushed_at": 1473388900}
            ]
        }



# Group Contacts

## Contacts Collection [/v0/users/{user_id}/contacts]

+ Parameters
    + user_id (UUID) - Identifier of the User in the form of a UUID

### List all Contacts of a User [GET]

+ Response 200 (application/json)

    + Attributes(ContactGET)

### Create a new Contact [PUT]

+ Request (application/json)

    + Attributes(Contact)

+ Response 201 (application/json)

    + Headers

            Location: /contacts/13346de1-d67b-41e7-b692-8f263afeebc7

    + Body

            {
                "contact_id": "13346de1-d67b-41e7-b692-8f263afeebc7"
            }

## Single Contact [/v0/users/{user_id}/contacts/{contact_id}]

+ Parameters
    + user_id (UUID) - Identifier of the User in the form of a UUID
    + contact_id (UUID) - Identifier of the Contact in the form of a UUID

### Get information about a specific Contact [GET]

+ Response 200 (application/json)

+ Attributes(Contact)

### Update a Contact [PUT]

+ Request (application/json)

    + Attributes(Contact)

+ Response 201 (application/json)

    + Headers

            Location: /contacts/13346de1-d67b-41e7-b692-8f263afeebc7

    + Body

            {
                "contact_id": "13346de1-d67b-41e7-b692-8f263afeebc7"
            }

### Delete a Contact [DELETE]
+ Response 204 (application/json)



# Group Dashboard

## Dashboard [/v0/users/{user_id}/dashboard{?since}{?until}{?fields}]

+ Parameters
    + user_id (UUID) - Identifier of the User in the form of a UUID
    + since (timestamp) - blabla
    + until (timestamp) - blabla
    + fields (list) - blabla

### List all Reminders of a User [GET]

+ Response 200 (application/json)
+ Attributes (ReminderGET)



# Group Reminders

## Reminders Collection [/v0/users/{user_id}/reminders]

+ Parameters
    + user_id (UUID) - Identifier of the User in the form of a UUID

### List all Reminders of a User [GET]

+ Response 200 (application/json)
+ Attributes (ReminderGET)


### Create a new Reminder [PUT]

+ Request (application/json)

    + Attributes(Reminder)

+ Response 201 (application/json)

    + Headers

            Location: /reminders/13346de1-d67b-41e7-b692-8f263afeebc7

    + Body

            {
                "contact_id": "13346de1-d67b-41e7-b692-8f263afeebc7"
            }

## Single Reminder [/v0/users/{user_id}/reminders/{reminder_id}]

+ Parameters
    + user_id (UUID) - Identifier of the User in the form of a UUID
    + reminder_id (UUID) - Identifier of the Reminder in the form of a UUID

### Get information about a specific Reminder [GET]

+ Response 200 (application/json)

    + Attributes (ReminderGET)

### Update a Reminder [PUT]

+ Request (application/json)

    + Attributes (Reminder)

+ Response 201 (application/json)

    + Headers

            Location: /reminders/13346de1-d67b-41e7-b692-8f263afeebc7

    + Body

            {
                "reminder_id": "13346de1-d67b-41e7-b692-8f263afeebc7"
            }

### Delete a Reminder [DELETE]
+ Response 204 (application/json)